 printf("\nEnter Quantity:\t\t");
        scanf("%", entry[*size].quantity) printf("\nEnter Quantity:\t\t");
        scanf(
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define SIZE 50
//#define MAX 100

typedef struct {
        char name[ SIZE ];
        int quantity;
        double cost;
}inventory;

int menu(void);
int enterChoice(void);
void Display(inventory entry[], int size);
void AddNewEntry(inventory entry[], int *size);
void SaveInventory(inventory br[], int *size);

int main()
{
       // int *size;
        int selection;
       // int choice;
        inventory entry [50];
        int size=0;

        enterChoice();
       // DisplayOptions();
        selection = menu();


//      printf("\nInventory before: %d", size);
//      defaultEntry(entry, &size);
//      printf("\nInventory after: %d\n\n", size);
//
        selection= menu();

        while(selection != 5)
        {
                if(selection == 1)
                {
                        printf("add item\n\n");
                //      scanf("%s", entry[*size].item
                        AddNewEntry(entry, &size);
                }
                else if(selection == 2)
                {
                        printf("DISPLAYING INVENTORY\n\n");
                        Display(entry, size);
                }
                else if(selection == 3)
                        printf("Initializing input table\n\n");
                        AddNewEntry(entry, &size);
                }
                if(selection==4)
               {
                       printf("Saving item to inventory file...\n\n");
                       SaveInventory(entry, &size);
               }
               else{
                       printf("Enter valid selection!\n\n");
                }
                printf("\n\n");
               enterChoice();
               // DisplayOptions();

               // scanf("%c", &trash);

                selection - menu();
  //  }
  // fwrite;
   // {
   //         printf("\t\tThank you for using the tool inventory!!!\n\n");
 //   }
//return 0;

}
int menu(void)
{
        int selection;
        printf("Enter option:");
        scanf("%d", &selection);

        return selection;
}
//Display menu
int enterChoice(void);
        int choiceMenu
        //printf("\n*********************************************\n\n");
        printf("HELLO, WELCOME TO THE INVENTORY PROGRAM.\n");
        printf("Enter Inventory option:\n"
                "1 - Load Inventory\n"
                "2 - Show Inventory\n"
                "3 - Add an Item\n"
                "4 - Save \n"
                "5 - EOF \"Exit\"\n");
       // printf("\n*********************************************\n\n");
        scanf("%d", &menuChoice);

        return menuChoice;

}
void loead(inventory br[], int *size)
{
        FILE * savePtr;

                if((savePtr = fopen("inventory.txt","r"))==0){
                        printf("CANNOT OPEN FILE\n");
                        return;
                }

                savePtr = fopen("inventory.txt","r");

                fscanf(savePtr,"%d",size);
                fread(br, sizeof(inventory),*size,savePtr);

                fclose(savePtr);
                    //                    }
int displayInventory(inventory entry[], int *size)
{
        int i;
        for (i=0; i<size; i++)
                        {
                        printf("\n");
                        printf("Item:\t\t %s\n", entry[i].item);
                        printf("Quantity:\t\t %d\n", entry[i].quantiy);
                        printf("Price:\t\t %0.2f\n", entry[i].price);
                        *size = *size + 1;
}

void AddNewEntry(inventory entry[], int *size)
{
        printf("\nEnter Item:\t\t");
        scanf("%s", entry[*size].item);
         printf("\nEnter Quantity:\t\t");
        scanf("%d", entry[*size].quantity);
         printf("\nEnter Price:\t\t");
        scanf("%lf", entry[*size].quantity)
      *size = *size + 1;
}